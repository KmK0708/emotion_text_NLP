# 케라스 감정 분석 실습 발표 슬라이드 구조

## 슬라이드 1: 제목 슬라이드
- 제목: "케라스 감정 분석 실습 프로젝트"
- 부제목: "Emotion Analysis with Keras"
- 발표자: [이름]
- 날짜: 2025년 6월 29일

## 슬라이드 2: 프로젝트 개요
- 목표: 케라스를 사용한 텍스트 감정 분석 모델 구축
- 사용 기술: TensorFlow/Keras, Bidirectional LSTM
- 데이터셋: Kaggle Emotions Dataset for NLP
- 최종 성과: 91.65% 정확도 달성

## 슬라이드 3: 데이터셋 소개
- 데이터셋: Kaggle Emotions Dataset for NLP
- 크기: 약 20,000개 텍스트 샘플
- 감정 클래스: 6개 (anger, fear, joy, love, sadness, surprise)
- 데이터 분포: 훈련 16,000개, 검증 2,000개, 테스트 2,000개

## 슬라이드 4: 실습 과정 개요
1. 데이터셋 탐색 및 분석
2. 텍스트 전처리
3. 기본 모델 구축
4. 모델 개선
5. 실제 예측 시스템 구현

## 슬라이드 5: 1단계 - 데이터셋 탐색
- 데이터 형식 확인: "텍스트;라벨"
- 감정 라벨 분포 시각화
- 텍스트 길이 분포 분석
- 결과: 6개 감정 클래스, 데이터 불균형 파악

## 슬라이드 6: 2단계 - 텍스트 전처리
- 텍스트와 라벨 분리
- 라벨 인코딩 (문자열 → 숫자)
- 텍스트 토큰화 (15,000개 단어)
- 시퀀스 패딩 (최대 길이 100)
- 결과: 어휘 크기 15,214개, 데이터 형태 (데이터개수, 100)

## 슬라이드 7: 3단계 - 기본 모델 구축
- 모델 구조: Embedding → LSTM → Dense
- 결과: 테스트 정확도 34.75%
- 문제점: 모델이 한 클래스로만 예측
- 개선 필요성 확인

## 슬라이드 8: 4단계 - 모델 개선
- 개선 사항:
  * Bidirectional LSTM 사용
  * 임베딩 차원 증가 (128 → 256)
  * 적절한 학습률 설정 (0.001)
  * 학습률 감소 스케줄러 추가
  * 정확도 기반 Early Stopping

## 슬라이드 9: 성능 비교
- 기본 모델: 34.75%
- 개선된 모델: 91.65%
- 개선도: +56.9%
- 빠른 수렴: 3 에포크만에 92% 달성

## 슬라이드 10: 5단계 - 실제 예측 시스템
- 모델 로드 및 전처리 도구 재생성
- 새로운 텍스트 입력 받기
- 감정 예측 및 신뢰도 계산
- 결과 시각화

## 슬라이드 11: 예측 결과 예시
- "I am feeling so happy today!" → joy (신뢰도: 100%)
- "I am really sad and depressed" → sadness (신뢰도: 99.4%)
- "I am angry about what happened" → anger (신뢰도: 89.9%)
- 복합적 감정: 신뢰도 낮게 나와 합리적 판단

## 슬라이드 12: 학습한 기술
- 자연어 처리 (NLP): 토큰화, 임베딩, 패딩
- 딥러닝 모델링: LSTM, Bidirectional LSTM
- 모델 최적화: 학습률 스케줄링, Early Stopping
- 실무 적용: 데이터 파이프라인, 모델 저장/로드

## 슬라이드 13: 기술적 세부사항
- 모델 아키텍처: Embedding → Bidirectional LSTM → Dense
- 훈련 설정: Adam 옵티마이저, 배치 크기 64
- 정규화: Dropout (0.2)
- 데이터 전처리: 15,000개 단어, 최대 길이 100

## 슬라이드 14: 향후 발전 방향
- 모델 개선: 사전 훈련된 임베딩, Transformer 모델
- 기능 확장: 다국어 지원, 웹 애플리케이션
- 실무 적용: 소셜 미디어 분석, 고객 리뷰 분석

## 슬라이드 15: 결론
- 성공 요인: 적절한 데이터셋, 체계적 접근, 지속적 개선
- 학습 효과: 케라스 숙련도 향상, NLP 기초 습득
- 프로젝트 의의: 실제 작동하는 시스템 구축

## 슬라이드 16: Q&A
- 질문 및 답변 시간
- 감사합니다

---

## 발표 팁:
1. 각 슬라이드마다 실제 코드나 결과 화면 캡처 포함
2. 성능 개선 그래프 시각화 강조
3. 실제 예측 데모 영상 준비
4. 핵심 수치와 성과 강조
5. 학습 과정에서의 어려움과 해결 방법 언급 